spring.cloud.config.name=product-service
spring.cloud.config.discovery.service-id=configserver
spring.cloud.config.discovery.enabled=true
spring.config.import=optional:configserver:http://localhost:8081

eureka.client.serviceUrl.defaultZone=http://discUser:discPassword@localhost:8082/eureka/

# Enable h2 console for browsing in mem db
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# The console requires us to provide a URL, user, and password to connect to the database
spring.datasource.url=jdbc:h2:mem:productdb;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# enabling hibernate query logging (set SQL to DEBUG & BasicBinder to TRACE to log SQL queries generated by Hibernate)
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# By default, Spring enables what's called "Open Session In View". This enables web requests to keep Hibernate Sessions open during view rendering, and, while it may be useful in certain cases, it is often considered an anti-pattern. Here we will simply disable it:
spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=create-drop
# make sure that our data.sql script is executed after Hibernate is initialized
spring.jpa.defer-datasource-initialization=true
